# Generated by Django 5.2.3

from django.db import migrations, models
import django.db.models.deletion
import django.core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('access_code', models.CharField(
                    help_text='6-digit access code for user authentication',
                    max_length=6,
                    unique=True,
                    validators=[django.core.validators.RegexValidator(
                        message='Access code must be exactly 6 digits',
                        regex='^\\d{6}$'
                    )]
                )),
                ('full_name', models.CharField(blank=True, max_length=150)),
                ('role', models.CharField(
                    choices=[('admin', 'Admin'), ('chair', 'Chair'), ('member', 'Member')],
                    default='member',
                    max_length=50
                )),
                ('target_hours_per_week', models.IntegerField(
                    default=2,
                    help_text='Target hours per week for this member'
                )),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chair', models.ForeignKey(
                    blank=True,
                    null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    related_name='chaired_committees',
                    to='core.user'
                )),
            ],
            options={
                'db_table': 'committees',
            },
        ),
        migrations.CreateModel(
            name='AllowedIP',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(
                    help_text='IP address allowed to access the clock app',
                    unique=True
                )),
                ('label', models.CharField(
                    blank=True,
                    help_text='Optional label for the IP address (e.g., "Office Computer A")',
                    max_length=100,
                    null=True
                )),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(
                    blank=True,
                    db_column='created_by',
                    help_text='User who added this IP address',
                    null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    to='core.user'
                )),
            ],
            options={
                'db_table': 'allowed_ips',
                'verbose_name': 'Allowed IP',
                'verbose_name_plural': 'Allowed IPs',
            },
        ),
        migrations.CreateModel(
            name='TimeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clock_in', models.DateTimeField()),
                ('clock_out', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='time_logs',
                    to='core.user'
                )),
            ],
            options={
                'db_table': 'time_logs',
                'ordering': ['-clock_in'],
            },
        ),
        migrations.CreateModel(
            name='UserCommittee',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('committee', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='core.committee'
                )),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='core.user'
                )),
            ],
            options={
                'db_table': 'user_committees',
            },
        ),
        migrations.AlterUniqueTogether(
            name='usercommittee',
            unique_together={('user', 'committee')},
        ),
        # Add database indexes for performance
        migrations.RunSQL(
            [
                "CREATE INDEX idx_users_access_code ON users(access_code);",
                "CREATE INDEX idx_logs_user_clock_in ON time_logs(user_id, clock_in DESC);",
                "CREATE INDEX idx_logs_user_clock_out ON time_logs(user_id, clock_out DESC);",
                "CREATE UNIQUE INDEX idx_one_open_shift_per_user ON time_logs(user_id) WHERE clock_out IS NULL;",
            ],
            reverse_sql=[
                "DROP INDEX IF EXISTS idx_users_access_code;",
                "DROP INDEX IF EXISTS idx_logs_user_clock_in;", 
                "DROP INDEX IF EXISTS idx_logs_user_clock_out;",
                "DROP INDEX IF EXISTS idx_one_open_shift_per_user;",
            ]
        ),
    ]
